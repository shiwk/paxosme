syntax = "proto3";

package paxos;

service Paxosme {
  rpc Propose (ProposeRequest) returns (ProposeReply) {}
  rpc ProposeAck(ProposeAckRequest) returns (ProposeAckReply){}
  rpc Accept (AcceptRequest) returns (AcceptReply) {}
  rpc AcceptAck (AcceptAckRequest) returns (AcceptAckReply) {}
  rpc NewValueChosen(NewValueChosenRequest) returns (NewValueChosenReply) {}
  rpc ShallILearn(ShallILearnRequest) returns (ShallILearnReply) {}
  rpc LearnerValueSync(LearnerValueSyncRequest) returns (LearnerValueSyncReply){}
  rpc LearnerValueSend(LearnerValueSendRequest) returns (LearnerValueSendReply){}
  rpc AckSyncValue(AckSyncValueRequest) returns (AckSyncValueReply) {}
  rpc TellInstanceId (TellInstanceIdRequest) returns (TellInstanceIdReply){}
  rpc ConfirmLearn (ConfirmLearnRequest) returns (ConfirmLearnReply){}
}

message ProposeRequest {
  uint64 proposal_id = 1;
  uint64 instance_id = 2;
  uint64 proposing_node_id = 3;
  uint64 sender_id = 4;
}

message ProposeReply {
  bool ack = 1;
  uint64 sender_id = 2;
}

message ProposeAckRequest {
  bool is_rejected = 1;
  //    uint64 replier_id = 2;
  uint64 promised_proposal_id = 3;
  uint64 instance_id = 4;
  string accepted_log_value = 5;
  uint64 promised_node_id = 6;
  uint64 sender_id = 7;
  uint64 proposal_id = 8;
  uint64 reply_to = 9;
}

message ProposeAckReply{
  bool ack = 1;
  uint64 sender_id = 2;
}

message AcceptRequest {
  uint64 proposal_id = 1;
  uint64 instance_id = 2;
  uint64 proposing_node_id = 3;
  string proposed_log_value = 5;
  uint64 sender_id = 6;
}

message AcceptReply {
  bool ack = 1;
  uint64 sender_id = 2;
}

message AcceptAckRequest{
  uint64 instance_id = 1;
  uint64 promised_node_id = 2;
  uint64 promised_proposal_id = 3;
  uint64 accepted_id = 4;
  string accepted_value = 5;
  bool rejected = 6;
  uint64 sender_id = 7;
  uint64 proposal_id =8;
  uint64 proposing_node_id = 9;
}

message AcceptAckReply{
  bool ack = 1;
  uint64 sender_id = 2;
}

message NewValueChosenRequest{
  uint64 instance_id = 1;
  string chosen_value = 2;
  uint64 proposal_id = 3;
  uint64 proposing_node_id =4;
  uint64 sender_id = 5;
}

message NewValueChosenReply{
  bool ack = 1;
  uint64 sender_id = 2;
}

message ShallILearnRequest{
  uint64 instance_id = 1;
  uint64 sender_id = 2;
}

message ShallILearnReply{
  bool ack = 1;
  uint64 sender_id = 2;
}

message LearnerValueSyncRequest{
  uint64 instance_id = 1;
  string value =2;
  uint64 proposal_id = 3;
  uint64 proposing_node_id = 4;
  uint64 sender_id = 5;
}

message LearnerValueSyncReply{
  bool ack = 1;
  uint64 sender_id = 2;
}

message AckSyncValueRequest{
  uint64 instance_id = 1;
  uint64 sender_id = 2;
}

message AckSyncValueReply{
  bool ack = 1;
  uint64 sender_id = 2;
}

message LearnerValueSendRequest{
  uint64 instance_id = 1;
  string value =2;
  uint64 proposal_id = 3;
  uint64 proposing_node_id = 4;
  uint64 sender_id = 5;
}

message LearnerValueSendReply{
  bool ack = 1;
  uint64 sender_id = 2;
}

message TellInstanceIdRequest{
  uint64 follower_instance_id = 1;
  uint64 leader_instance_id = 2;
  uint64 sender_id = 3;
}

message TellInstanceIdReply{
  bool ack = 1;
  uint64 sender_id = 2;
}

message ConfirmLearnRequest{
  uint64 instance_id = 1;
  uint64 sender_id = 2;
}

message ConfirmLearnReply{
  bool ack = 1;
  uint64 sender_id = 2;
}